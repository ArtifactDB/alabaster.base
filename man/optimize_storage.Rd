% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/optimize_storage.R
\name{optimize_storage}
\alias{optimize_storage}
\alias{collect_integer_attributes,integer-method}
\alias{collect_integer_attributes,array-method}
\alias{collect_number_attributes,double-method}
\alias{collect_number_attributes,array-method}
\alias{collect_string_attributes,character-method}
\alias{collect_string_attributes,array-method}
\alias{collect_boolean_attributes,logical-method}
\alias{collect_boolean_attributes,array-method}
\alias{collect_integer_attributes}
\alias{optimize_integer_storage}
\alias{collect_number_attributes}
\alias{optimize_number_storage}
\alias{collect_string_attributes}
\alias{optimize_string_storage}
\alias{collect_boolean_attributes}
\alias{optimize_boolean_storage}
\title{HDF5 storage type optimization}
\usage{
collect_integer_attributes(x)

optimize_integer_storage(x)

collect_number_attributes(x)

optimize_number_storage(x, fallback = chooseMissingPlaceholderForHdf5)

collect_string_attributes(x)

optimize_string_storage(x, fallback = NULL)

collect_boolean_attributes(x)

optimize_boolean_storage(x)
}
\arguments{
\item{x}{An atomic vector or array of the specified type, 
e.g., integer vector/array for \code{collect_integer_attributes} and \code{optimize_integer_storage}.
Developers can also extend this to abstract objects containing values of the same type, e.g., matrix-like S4 classes.}

\item{fallback}{Function that accepts \code{x} and returns a suitable placeholder in the presence of \code{NA}s.
If \code{NULL}, this defaults to \code{\link{chooseMissingPlaceholderForHdf5}}.}
}
\value{
For \code{collect_integer_attributes}, a named list containing:
\itemize{
\item \code{min}, the smallest non-\code{NA} value in \code{x}.
This is set to Inf if all values are \code{NA}.
\item \code{max}, the largest non-\code{NA} value in \code{x}.
This is set to -Inf if all values are \code{NA}.
\item \code{missing}, logical scalar indicating whether any values in \code{x} are \code{NA}.
}

For \code{collect_number_attributes}, a named list containing:
\itemize{
\item \code{missing}, logical scalar indicating whether any values in \code{x} are \code{NA}.
\item \code{non_integer}, logical scalar indicating whether any values in \code{x} are non-integer.
\item \code{min}, the smallest non-\code{NA} integer value in \code{x}.
This is set to Inf if there are any non-integer or \code{NA} values.
\item \code{max}, the largest non-\code{NA} integer value in \code{x}.
This is set to -Inf if there are any non-integer or \code{NA} values.
\item \code{has_NaN}, logical scalar indicating whether NaN is present in \code{x}.
\item \code{has_Inf}, logical scalar indicating whether positive infinity is present in \code{x}.
\item \code{has_NegInf}, logical scalar indicating whether negative infinity is present in \code{x}.
\item \code{has_lowest}, logical scalar indicating whether the smallest double-precision value is present in \code{x}.
\item \code{has_highest}, logical scalar indicating whether the highest double-precision value is present in \code{x}.
}

For \code{collect_string_attributes}, a named list containing:
\itemize{
\item \code{missing}, logical scalar indicating whether any values in \code{x} are \code{NA}.
\item \code{has_NA}, logical scalar indicating whether the \code{"NA"} string is present in \code{x}.
\item \code{has__NA}, logical scalar indicating whether the \code{"_NA"} string is present in \code{x}.
\item \code{max_len}, integer scalar specifying the maximum length of the strings in \code{x}.
}

For \code{collect_boolean_attributes}, a named list containing:
\itemize{
\item \code{missing}, logical scalar indicating whether any values in \code{x} are \code{NA}.
}

For the \code{optimize_*_storage} functions, a named list containing:
\itemize{
\item \code{type}, string containing the HDF5 datatype for storing \code{x}.
\item \code{placeholder}, value of the placeholder for \code{NA} values.
\item \code{other}, other attributes of \code{x} (e.g., number of non-zero elements for sparse vectors).
These should be stored in an \code{other} field in the named list returned by \code{collect_*_ attributes}.
}
}
\description{
Optimize HDF5 storage to use the smallest possible storage type. 
Intended for \pkg{alabaster.*} developers only.
}
\author{
Aaron Lun
}
