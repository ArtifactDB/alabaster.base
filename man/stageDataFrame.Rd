% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stageDataFrame.R
\name{stageObject,DataFrame-method}
\alias{stageObject,DataFrame-method}
\alias{addStringPlaceholderAttribute}
\alias{chooseStringPlaceholder}
\alias{.addStringPlaceholderAttribute}
\alias{.chooseStringPlaceholder}
\title{Stage a DataFrame}
\usage{
\S4method{stageObject}{DataFrame}(
  x,
  dir,
  path,
  child = FALSE,
  df.name = "simple",
  mcols.name = "mcols",
  meta.name = "other"
)
}
\arguments{
\item{x}{A \linkS4class{DataFrame}.}

\item{dir}{String containing the path to the staging directory.}

\item{path}{String containing a prefix of the relative path inside \code{dir} where \code{x} is to be saved.
The actual path used to save \code{x} may include additional components, see Details.}

\item{child}{Logical scalar indicating whether \code{x} is a child of a larger object.}

\item{df.name}{String containing the relative path inside \code{dir} to save the CSV/HDF5 file.}

\item{mcols.name}{String specifying the name of the directory inside \code{path} to save \code{\link{mcols}(x)}.
If \code{NULL}, per-element metadata is not saved.}

\item{meta.name}{String specifying the name of the directory inside \code{path} to save \code{\link{metadata}(x)}.
If \code{NULL}, object metadata is not saved.}
}
\value{
A named list containing the metadata for \code{x}.
\code{x} itself is written to a CSV or HDF5 file inside \code{path}.
Additional files may also be created inside \code{path} and referenced from the metadata.
}
\description{
Stage a DataFrame by saving it to a CSV or HDF5 file.
CSV files follow the \href{https://github.com/LTLA/comservatory}{comservatory} specification,
while the expected layout of a HDF5 file is described in the \code{hdf5_data_frame} schema in \pkg{alabaster.schemas}.
}
\details{
All atomic vector types are supported in the columns along with dates and (ordered) factors.
Dates and factors are converted to character vectors and saved as such inside the file.
Factor levels are saved in a separate data frame, which is referenced in the \code{columns} field of the returned metadata.

Any non-atomic columns are saved to a separate file inside \code{path} via \code{\link{stageObject}},
and referenced from the corresponding \code{columns} entry.
For consistency, they will be replaced in the main file by a placeholder all-zero column.

As a DataFrame is a \linkS4class{Vector} subclass, its R-level metadata can be staged by \code{\link{.processMetadata}}.
}
\section{File formats}{

If \code{\link{.saveDataFrameFormat}() == "csv"}, the contents of \code{x} are saved to a uncompressed CSV file.
If \code{x} has non-\code{NULL} row names, the first saved column in the CSV is named \code{row_names} and will contain the row names.
This should be ignored when indexing columns and comparing them to the corresponding entry of \code{columns} in the file's JSON metadata document.

If \code{\link{.saveDataFrameFormat}() == "csv.gz"}, the CSV file is compressed (the default).
This reduces space and bandwidth requirements at the cost of the (de)compression overhead.
It also makes it more difficult to do queries inside the file without decompression of the entire file.

If \code{\link{.saveDataFrameFormat}() == "hdf5"}, \code{x} is saved into a HDF5 file instead of a CSV.
Columns are saved into a \code{data} group where each column is a dataset named after its positional index.
The names of the columns are saved into the \code{column_names} dataset.
If row names are present, a separate \code{row_names} dataset containing the row names will be generated.
This format is most useful for random access and for preserving the precision of numerical data.
}

\examples{
library(S4Vectors)
df <- DataFrame(A=1:10, B=LETTERS[1:10])

tmp <- tempfile()
dir.create(tmp)
stageObject(df, tmp, path="coldata")

list.files(tmp, recursive=TRUE)

}
\seealso{
\url{https://github.com/LTLA/comservatory}, for the CSV file specification.

The \code{csv_data_frame} and \code{hdf5_data_frame} schemas from the \pkg{alabaster.schemas} package.
}
\author{
Aaron Lun
}
