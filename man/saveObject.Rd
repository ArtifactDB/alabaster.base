% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R
\name{saveObject}
\alias{saveObject}
\alias{stageObject,ANY-method}
\alias{searchForMethods}
\alias{.searchForMethods}
\title{Save objects to disk}
\usage{
saveObject(x, path, ...)
}
\arguments{
\item{x}{A Bioconductor object of the specified class.}

\item{path}{String containing the path to a directory in which to save \code{x}.}

\item{...}{Further arguments to pass to specific methods.}
}
\value{
\code{dir} is created and populated with files containing the contents of \code{x}.
}
\description{
Generic to stage assorted R objects into appropriate on-disk representations.
More methods may be defined by other packages to extend the \pkg{alabaster.base} framework to new classes.
}
\details{
Methods for the \code{stageObject} generic should create a directory at \code{path} in which the contents of \code{x} are to be saved.
The files may consist of any format, though language-agnostic formats like HDF5, CSV, JSON are preferred.
For more complex objects, multiple files and subdirectories may be created within \code{path}. 
The only strict requirements are:
\itemize{
\item There must be an \code{OBJECT} file inside \code{path}, containing a single word specifying the class of the object that was saved, e.g., \code{data_frame}, \code{summarized_experiment}.
This will be used by loading functions to determine how to load the files into memory.
\item The names of files and subdirectories should not start with \code{_} or \code{.}.
These are reserved for applications, e.g., to build manifests or to store additional metadata.
}

Developers of \code{stageObject} methods may wish to save \dQuote{child} components of \code{x} with a subdirectory of \code{path}.
In such cases, developers should call \code{\link{altSaveObject}} on each child component, rather than calling \link{saveObject} directly.
This ensures that any application-level overrides of the loading functions are respected. 

If a method makes use of additional arguments, it should be scoped by the name of the class for each method, e.g., \code{list.format}, \code{dataframe.include.nested}.
This avoids problems with conflicts in the interpretation of identically named arguments between different methods.
It is expected that arguments in \code{...} are forwarded to internal \code{\link{altSaveObject}} calls.
}
\examples{
library(S4Vectors)
X <- DataFrame(X=LETTERS, Y=sample(3, 26, replace=TRUE))

tmp <- tempfile()
saveObject(X, tmp)
list.files(tmp, recursive=TRUE)

}
\author{
Aaron Lun
}
