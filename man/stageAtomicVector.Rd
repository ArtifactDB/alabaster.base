% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stageAtomicVector.R
\name{stageAtomicVector}
\alias{stageAtomicVector}
\alias{stageObject,integer-method}
\alias{stageObject,character-method}
\alias{stageObject,logical-method}
\alias{stageObject,double-method}
\alias{stageObject,numeric-method}
\alias{stageObject,Date-method}
\alias{stageObject,POSIXlt-method}
\alias{stageObject,POSIXct-method}
\title{Stage atomic vectors}
\usage{
\S4method{stageObject}{integer}(x, dir, path, child = FALSE, ...)

\S4method{stageObject}{character}(x, dir, path, child = FALSE, ...)

\S4method{stageObject}{logical}(x, dir, path, child = FALSE, ...)

\S4method{stageObject}{double}(x, dir, path, child = FALSE, ...)

\S4method{stageObject}{numeric}(x, dir, path, child = FALSE, ...)

\S4method{stageObject}{Date}(x, dir, path, child = FALSE, ...)

\S4method{stageObject}{POSIXlt}(x, dir, path, child = FALSE, ...)

\S4method{stageObject}{POSIXct}(x, dir, path, child = FALSE, ...)
}
\arguments{
\item{x}{Any of the atomic vector types, or \link{Date} objects, or time objects, e.g., \link{POSIXct}.}

\item{dir}{String containing the path to the staging directory.}

\item{path}{String containing a prefix of the relative path inside \code{dir} where \code{x} is to be saved.
The actual path used to save \code{x} may include additional components, see Details.}

\item{child}{Logical scalar indicating whether \code{x} is a child of a larger object.}

\item{...}{Further arguments that are ignored.}
}
\value{
A named list containing the metadata for \code{x}.
\code{x} itself is written to a CSV file inside \code{path}.
}
\description{
Stage vectors containing atomic elements (or values that can be cast as such, e.g., dates and times).
}
\details{
Dates and POSIX times are cast to strings;
the type itself is recorded in the metadata.
}
\examples{
tmp <- tempfile()
dir.create(tmp)
stageObject(LETTERS, tmp, path="foo")
stageObject(setNames(runif(26), letters), tmp, path="bar")

list.files(tmp, recursive=TRUE)

}
\author{
Aaron Lun
}
