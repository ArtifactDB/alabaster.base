% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/validateObject.R
\name{validateObject}
\alias{validateObject}
\alias{registerValidateObjectFunction}
\alias{registerValidateObjectHeightFunction}
\alias{registerValidateObjectDimensionsFunction}
\title{Validate an object's on-disk representation}
\usage{
validateObject(path, metadata = NULL)

registerValidateObjectFunction(type, fun)

registerValidateObjectHeightFunction(type, fun)

registerValidateObjectDimensionsFunction(type, fun)
}
\arguments{
\item{path}{String containing a path to a directory, itself created with a \code{\link{saveObject}} method.}

\item{metadata}{List containing metadata for the object.
If this is not supplied, it is automatically read from the \code{OBJECT} file inside \code{path}.}

\item{type}{String specifying the name of type of the object.}

\item{fun}{For \code{registerValidateObjectFunction}, a function that accepts \code{path} and \code{metadata}, and raises an error if the object at \code{path} is invalid.
It can be assumed that \code{metadata} is a list created by reading \code{OBJECT}.

For \code{registerValidateObjectHeightFunction}, a function that accepts \code{path} and \code{metadata}, and returns an integer specifying the \dQuote{height} of the object.
This is usually the length for vector-like or 1-dimensional objects, and the extent of the first dimension for higher-dimensional objects.

For \code{registerValidateObjectDimensionsFunction}, a function that accepts \code{path} and \code{metadata}, and returns an integer vector specifying the dimensions of the object.

This may also be \code{NULL} to delete an existing registry from any of the functions mentioned above.}
}
\value{
For \code{validateObject}, \code{NULL} is returned invisibly upon success, otherwise an error is raised.

For the \code{register*} functions, the supplied \code{fun} is added to the corresponding registry for \code{type}.
If \code{fun = NULL}, any existing entry for \code{type} is removed.
}
\description{
Validate an object's on-disk representation.
This is done by dispatching to an appropriate validation function based on the type in the \code{OBJECT} file.
}
\examples{
library(S4Vectors)
df <- DataFrame(A=1:10, B=LETTERS[1:10])

tmp <- tempfile()
saveObject(df, tmp)
validateObject(tmp)

}
\author{
Aaron Lun
}
